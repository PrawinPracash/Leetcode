class Solution {
public:
    vector<vector<int>> getAncestors(int n, vector<vector<int>>& edges) {
        
        // topological sort
        vector<vector<int>> adj(n);
        vector<int> in(n,0);  // array that stores count of indegrees of every node
        for(auto x:edges){
            adj[x[0]].push_back(x[1]);
            in[x[1]]++;
        }
        queue<int> q;
        for(int i=0;i<n;i++){
            if(in[i]==0){
                q.push(i);
            }
        }

        vector<set<int>> ans(n);
        while(!q.empty()){
            auto f=q.front();
            q.pop();
            

            for(auto x:adj[f]){
                in[x]--;

                ans[x].insert(f);
                for(auto y:ans[f]){
                    ans[x].insert(y);
                }
                
                if(in[x]==0){
                    q.push(x);
                }
            }

        }
        vector<vector<int>> res(n);
        for(int i=0;i<n;i++){
            for(auto y:ans[i]){
                res[i].push_back(y);
            }
        }
        return res;






    }
};
